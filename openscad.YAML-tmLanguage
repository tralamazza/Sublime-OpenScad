# [PackageDev] target_format: plist, ext: tmLanguage
---
name: OpenScad
scopeName: source.scad
fileTypes: [scad]
uuid: 6f8105a1-5126-4af9-8bc3-4797807d0adf

patterns:
- include: '#comments'
- include: '#keywords'
- include: '#literals'
- include: '#support'
- include: '#modules'
- include: '#functions'
- include: '#function-call'

repository:
  comments:
    patterns:
    - name: comment.line.double-slash.scad
      begin: //
      end: $
      captures:
        '0': { name: punctuation.definition.comment.scad }
    - name: comment.block.scad
      begin: /\*
      end: \*/
      captures:
        '0': { name: punctuation.definition.comment.scad }

  keywords:
    patterns:
    - name: keyword.control.conditional.scad
      match: \b(else|if)\b
    - name: keyword.control.flow.scad
      match: \b(return)\b
    - name: keyword.control.loop.scad
      match: \b(for|let|intersection_for)\b
    - name: keyword.other.scad
      match: \b(assign|assert)\b
    - name: keyword.operator.arithmetical.scad
      match: '\+|-|\*|/|%|='
    - name: keyword.operator.relational.scad
      match: '<|<=|==|!=|>=|>'
    - name: keyword.operator.logical.scad
      match: '&&|\|\||!'
    - name: keyword.operator.conditional.scad
      match: \?

  keyword_arguments:
    begin: \b([[:alpha:]_][[:alnum:]_]*)\s*(=)(?!=)
    beginCaptures:
      '1': {name: variable.parameter.function.keyword.scad}
      '2': {name: keyword.operator.assignment.scad}
    end: \s*(?:(,)|(?=[\)\:]))
    endCaptures:
      '1': {name: punctuation.separator.parameters.scad}
    patterns:
    - include: $self

  modules:
    contentName: meta.module.parameters.scad
    begin: \b(module)\s+([[:alpha:]_][[:alnum:]_]*)\s*(\()
    beginCaptures:
      '1': { name: storage.modifier.module.scad }
      '2': { name: entity.name.function.scad }
      '3': { name: punctuation.definition.parameters.begin.scad }
    end: (\))
    endCaptures:
      '1': { name: punctuation.definition.parameters.end.scad }
    patterns:
      - include: '#keyword_arguments'
      - name: variable.parameter.scad
        match: ([[:alpha:]_][[:alnum:]_]*)

  functions:
    contentName: meta.function.parameters.scad
    begin: \b(function)\s+([[:alpha:]_][[:alnum:]_]*)\s*(\()
    beginCaptures:
      '1': { name: storage.modifier.function.scad }
      '2': { name: entity.name.function.scad }
      '3': { name: punctuation.definition.parameters.begin.scad }
    end: (\))
    endCaptures:
      '1': { name: punctuation.definition.parameters.end.scad }
    patterns:
      - include: '#keyword_arguments'
      - name: variable.parameter.scad
        match: ([[:alpha:]_][[:alnum:]_]*)

  function-call:
    name: meta.function-call.scad
    contentName: meta.function-call.arguments.scad
    begin: (\()
    beginCaptures:
      '1': {name: punctuation.definition.arguments.begin.scad}
    end: (\))
    endCaptures:
      '1': {name: punctuation.definition.arguments.end.scad}
    patterns:
    - include: '#keyword_arguments'
    - include: $self

  literals:
    patterns:
    - name: constant.language.boolean.true.scad
      match: '\btrue\b'
    - name: constant.language.boolean.false.scad
      match: '\bfalse\b'
    - name: constant.language.boolean.undef.scad
      match: '\bundef\b'
    - name: constant.language.boolean.PI.scad
      match: '\bPI\b'
    - name: string.quoted.double.scad
      begin: '"'
      end: '"'
      patterns:
      - name: constant.character.escape.untitled
      - match: \\.
    - name: constant.numeric.scad
      match: \b(\d+(\.\d+)?)\b
    - name: meta.module.children.scad
      match: \b(children)\s*(\()(.*?)(\))
      captures:
        '1': { name: storage.modifier.module.scad }
        '2': { name: punctuation.definition.parameters.begin.scad }
        '4': { name: punctuation.definition.parameters.end.scad }
    - name: variable.parameter.special.scad
      match: \B\$(fa|fs|fn|t|vpr|vpt|vpd|children|preview)\b

  support:
    patterns:
    - name: support.function.trigonometric.scad
      match: \b(cos|sin|tan|acos|asin|atan|atan2)\b
    - name: support.function.math.scad
      match: \b(abs|ceil|chr|cross|concat|exp|floor|ln|len|log|lookup|max|min|norm|ord|parent_module|pow|rands|round|search|sign|sqrt|str|version|version_num)\b
    - name: support.function.transformations.scad
      match: \b(scale|resize|rotate|translate|mirror|multmatrix|color|minkowski|hull|offset|linear_extrude|rotate_extrude)\b
    - name: support.function.primitives.scad
      match: \b(cube|cylinder|polyhedron|sphere|circle|square|polygon|text|projection)\b
    - name: support.function.csg.scad
      match: \b(union|difference|intersection|render)\b
    - name: support.function.import.scad
      match: \b(import|surface)\b

...